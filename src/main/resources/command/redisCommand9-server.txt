server相关的命令

1. BGREWRITEAOF
    异步执行AOF文件重写操作，即使执行失败，也不会有任何数据丢失，因为旧的AOF文件在该命令成功之前不会修改

    返回值：
    返回ok


2. BGSAVE
    后台保存DB。会立即返回OK状态码，如果保存成功可以使用lastsave命令来查询

    返回值：
    标准返回值

    例子：
    127.0.0.1:6379> bgsave
    Background saving started
    127.0.0.1:6379> lastsave
    (integer) 1501391683

3. CLIENT GETNAME
    返回当前连接 由 client setName 设置的名字。如果之前没有设置，则返回一个空的回复。

   例子：
   127.0.0.1:6379> client getname
   (nil)
   127.0.0.1:6379> client setname testRedis
   OK
   127.0.0.1:6379> client getname
   "testRedis"

4. CLIENT KILL [ip:port] [ID client-id]
    CLIENT KILL关闭一个指定的连接

    例子：
    CLIENT KILL ADDR ip:port

    CLIENT KILL ID client-id

5. CLIENT LIST
    所有连接到服务器的客户端信息和统计数据

    例子：
    127.0.0.1:6379> client list
    id=51 addr=127.0.0.1:53304 fd=6 name=testRedis
    age=10011 idle=0 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=32768 obl=0 oll=0 omem=0 events=r cmd=client

    id: 唯一的64位的客户端ID(Redis 2.8.12加入)。
    addr: 客户端的地址和端口
    fd: 套接字所使用的文件描述符
    age: 以秒计算的已连接时长
    idle: 以秒计算的空闲时长
    flags: 客户端 flag
    db: 该客户端正在使用的数据库 ID
    sub: 已订阅频道的数量
    psub: 已订阅模式的数量
    multi: 在事务中被执行的命令数量
    qbuf: 查询缓冲区的长度（字节为单位， 0 表示没有分配查询缓冲区）
    qbuf-free: 查询缓冲区剩余空间的长度（字节为单位， 0 表示没有剩余空间）
    obl: 输出缓冲区的长度（字节为单位， 0 表示没有分配输出缓冲区）
    oll: 输出列表包含的对象数量（当输出缓冲区没有剩余空间时，命令回复会以字符串对象的形式被入队到这个队列里）
    omem: 输出缓冲区和输出列表占用的内存总量
    events: 文件描述符事件
    cmd: 最近一次执行的命令

6.  CLIENT PAUSE timeout

7.  CLIENT SETNAME connection-name
    给客户端设置连接名字

    例子：
    127.0.0.1:6379> client setname test
    OK
    127.0.0.1:6379> client getname
    "test"

8. COMMAND
   返回Redis所有命令数组

9. COMMAND COUNT
    返回redis服务端的命令总数

10. CONFIG GET parameter
    用来读取redis服务器的配置文件参数，但并不是所有参数都支持

    例子：
    127.0.0.1:6379> config get hash-max-ziplist-entries
    1) "hash-max-ziplist-entries"
    2) "512

11. CONFIG RESETSTAT
    充值INFO命令统计里面的一些数据


12. CONFIG REWRITE
    该命令重写redis.config；如果服务重启，rewrite的参数会生效；而config set设置的参数在重启后不生效。


13. CONFIG SET parameter
    config set命令，重新配置在运行时的服务器，不需要重启Redis的使用。并且将开始生效执行下一个命令。

    例子：
    127.0.0.1:6379> config get list-compress-depth
    1) "list-compress-depth"
    2) "1"
    127.0.0.1:6379> config set list-compress-depth 0
    OK
    127.0.0.1:6379> config get list-compress-depth
    1) "list-compress-depth"
    2) "0"

14. DBSIZE
    返回当前数据里面keys的数量

    例子：
    127.0.0.1:6379> dbsize
    (integer) 7

15. DEBUG OBJECT key
    返回key的相关信息

    例子：
    127.0.0.1:6379> debug object listkey
    Value at:0x7f467ba6e480 refcount:1 encoding:quicklist serializedlength:19 lru:8157027
    lru_seconds_idle:85137 ql_nodes:1 ql_avg_node:1.00 ql_ziplist_max:-2 ql_compressed:0 ql_uncompressed_size:17

16. 127.0.0.1:6379> DEBUG SEGFAULT
    Could not connect to Redis at 127.0.0.1:6379: Connection refused
    not connected>

17. FLUSHALL
    删除所有数据库里面的所有数据。注意不是当前数据库，而是所有数据库。
    这个操作的时间复杂度是O(N),N是数据库的数量

18. FLUSHDB
    删除当前数据库中的所有数据，醋则独是O（N） N是当前数据的keys的数量

19. INFO [section]
    返回redis服务器的各种信息和统计数据

    section的可选值：

    server: Redis服务器的一般信息
    clients: 客户端的连接部分
    memory: 内存消耗相关信息
    persistence: RDB和AOF相关信息
    stats: 一般统计
    replication: 主/从复制信息
    cpu: 统计CPU的消耗
    commandstats: Redis命令统计
    cluster: Redis集群信息
    keyspace: 数据库的相关统计

20. LASTSAVE
    执行成功时返回UNIX时间戳，上次执行BGSAVE的时间

    127.0.0.1:6379> lastsave
    (integer) 1501415106


21. MONITOR
    MONITOR 是一个调试命令，返回服务器处理的每一个命令
    由于MONITOR命令返回 服务器处理的所有的 命令, 所以在性能上会有一些消耗.

    例子：
    $ ./redis-cli -a test monitor
    OK
    1501417878.460806 [0 127.0.0.1:36815] "auth" "test"
    1501417893.815656 [0 127.0.0.1:36815] "info"

    ./redis-benchmark -c 10 -n 100000 -q
    PING_INLINE: 118343.19 requests per second
    PING_BULK: 119904.08 requests per second
    SET: 116959.06 requests per second
    GET: 119331.74 requests per second
    INCR: 118623.96 requests per second
    LPUSH: 120192.30 requests per second
    RPUSH: 120481.93 requests per second
    LPOP: 120336.95 requests per second
    RPOP: 119904.08 requests per second
    SADD: 120481.93 requests per second
    SPOP: 119904.08 requests per second
    LPUSH (needed to benchmark LRANGE): 118906.06 requests per second
    LRANGE_100 (first 100 elements): 119617.22 requests per second
    LRANGE_300 (first 300 elements): 120192.30 requests per second
    LRANGE_500 (first 450 elements): 119617.22 requests per second
    LRANGE_600 (first 600 elements): 119047.62 requests per second

22. ROLE

23. SAVE
    产生一个同步操作，以RDB文件的方式保存所有数据的快照，但该命令一般不再生产环境中使用。因为它会阻塞所有的客户端的请求。
    可以使用BGSAVE命令代替

24. SHUTDOWN [NOSAVE] [SAVE]
     该命令执行如下操作：
     停止所有客户端.
     如果配置了save 策略 则执行一个阻塞的save命令.
     如果开启了AOF,则刷新aof文件..
     关闭redis服务进程（redis-server）

     SHUTDOWN SAVE能够在即使没有配置持久化的情况下强制数据库存储.
     SHUTDOWN NOSAVE 能够在配置一个或者多个持久化策略的情况下阻止数


25. SLAVEOF host port
    将当前服务器转变为指定服务器的从属服务器，
     如果当前服务器已经是某个主服务器的从属服务器，那么执行改命令，将使当前服务器停止对救助服务器的同步，
    丢弃旧数据集，转而对新主服务器进行同步。
     另外，对一个从属服务器执行命令 SLAVEOF NO ONE 将使得这个从属服务器关闭复制功能，并从从属服务器转变回主服务器，
    原来同步所得的数据集不会被丢弃。

26. SLOWLOG subcommand [argument]
    该命令用于读取和重置Redis慢查询日志

27. TIME
    返回当前Unix时间戳，和这一秒已经过去的未秒数。

    例子：
    127.0.0.1:6379> time
    1) "1501419575"
    2) "762530

28. SYNC
    Sync 命令用于同步主从服务器。



































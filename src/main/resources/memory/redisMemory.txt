所有数据以500万为基础.(参考命令 info, debug object, flushall)

1. 比较key值长和短的内存区别.
````
存500万数据的情况（key值较短）

127.0.0.1:6379> dbsize 
(integer) 4974516
127.0.0.1:6379> scan 0 COUNT 20
1) "131072"
2)  1) "listKey:59486170"
    2) "listKey:28791958"
    3) "setKey:11354070"
    4) "mapKey:54303736"
    5) "zaddKey:97996283"
    6) "listKey:49883561"
    7) "mapKey:18328012"
    8) "num:87615610"
    9) "setKey:66520022"
   10) "mapKey:82866653"
   11) "listKey:78369193"
   12) "zaddKey:8000851"
   13) "zaddKey:76565413"
   14) "listKey:86673104"
   15) "zaddKey:86136620"
   16) "mapKey:59828160"
   17) "zaddKey:1337731"
   18) "listKey:13973556"
   19) "num:41374425"
   20) "mapKey:42556618"
127.0.0.1:6379> info Memory
# Memory
used_memory:558953888
used_memory_human:533.06M
used_memory_rss:649760768
used_memory_rss_human:619.66M
used_memory_peak:2986123072
used_memory_peak_human:2.78G
total_system_memory:4143886336
total_system_memory_human:3.86G
used_memory_lua:37888
used_memory_lua_human:37.00K
maxmemory:0
maxmemory_human:0B
maxmemory_policy:noeviction
mem_fragmentation_ratio:1.16
mem_allocator:jemalloc-4.0.3


执行清除

127.0.0.1:6379> flushall
OK
(3.34s)
127.0.0.1:6379> dbsize
(integer) 0
127.0.0.1:6379> info Memory
# Memory
used_memory:820992
used_memory_human:801.75K
used_memory_rss:21307392
used_memory_rss_human:20.32M
used_memory_peak:2986123072
used_memory_peak_human:2.78G
total_system_memory:4143886336
total_system_memory_human:3.86G
used_memory_lua:37888
used_memory_lua_human:37.00K
maxmemory:0
maxmemory_human:0B
maxmemory_policy:noeviction
mem_fragmentation_ratio:25.95
mem_allocator:jemalloc-4.0.3




存500万数据的情况（key值较长）
key的长度由原来的加上前缀'testKeyLength++++++++++++++++++++++++++++++++++'

127.0.0.1:6379> dbsize
(integer) 4980115
127.0.0.1:6379> scan 0 COUNT 20
1) "3801088"
2)  1) "testKeyLength++++++++++++++++++++++++++++++++++num:79637262"
    2) "testKeyLength++++++++++++++++++++++++++++++++++num:35885178"
    3) "testKeyLength++++++++++++++++++++++++++++++++++setKey:96883097"
    4) "testKeyLength++++++++++++++++++++++++++++++++++zaddKey:46220067"
    5) "testKeyLength++++++++++++++++++++++++++++++++++mapKey:28878542"
    6) "testKeyLength++++++++++++++++++++++++++++++++++setKey:31440872"
    7) "testKeyLength++++++++++++++++++++++++++++++++++mapKey:28120548"
    8) "testKeyLength++++++++++++++++++++++++++++++++++num:89373286"
    9) "testKeyLength++++++++++++++++++++++++++++++++++setKey:83873841"
   10) "testKeyLength++++++++++++++++++++++++++++++++++setKey:91661262"
   11) "testKeyLength++++++++++++++++++++++++++++++++++zaddKey:33829475"
   12) "testKeyLength++++++++++++++++++++++++++++++++++zaddKey:59643215"
   13) "testKeyLength++++++++++++++++++++++++++++++++++listKey:23629033"
   14) "testKeyLength++++++++++++++++++++++++++++++++++mapKey:96428506"
   15) "testKeyLength++++++++++++++++++++++++++++++++++listKey:69827524"
   16) "testKeyLength++++++++++++++++++++++++++++++++++zaddKey:68129964"
   17) "testKeyLength++++++++++++++++++++++++++++++++++mapKey:32472278"
   18) "testKeyLength++++++++++++++++++++++++++++++++++num:32012329"
   19) "testKeyLength++++++++++++++++++++++++++++++++++num:68696622"
   20) "testKeyLength++++++++++++++++++++++++++++++++++setKey:3665294"
127.0.0.1:6379> info MEMORY
# Memory
used_memory:831832512
used_memory_human:793.30M
used_memory_rss:857923584
used_memory_rss_human:818.18M
used_memory_peak:2986123072
used_memory_peak_human:2.78G
total_system_memory:4143886336
total_system_memory_human:3.86G
used_memory_lua:37888
used_memory_lua_human:37.00K
maxmemory:0
maxmemory_human:0B
maxmemory_policy:noeviction
mem_fragmentation_ratio:1.03
mem_allocator:jemalloc-4.0.3

````

2.高级一点的数据类型如set, sorted set,hash,他们在数据大小不同的情况下使用的存储结构是不同的. see https://redis.io/topics/memory-optimization
弄明白里面每一个参数的意义.例如 hash-max-zipmap-entries 512 写程序来对比内存使用大小.


#HASH的内存优化实例

1)hash-max-zipmap-entries >512
  hash-max-zipmap-value >64

````
    127.0.0.1:6379> dbsize
    (integer) 498720
    127.0.0.1:6379> scan 0
    1) "163840"
    2)  1) "mapKey:73293890"
        2) "mapKey:64423927"
        3) "mapKey:7010940"
        4) "mapKey:98631431"
        5) "mapKey:2049735"
        6) "mapKey:65125853"
        7) "mapKey:60842228"
        8) "mapKey:82903244"
        9) "mapKey:20185661"
       10) "mapKey:91981620"
    127.0.0.1:6379> object encoding mapKey:73293890
    "hashtable"
    127.0.0.1:6379> info memory
    # Memory
    used_memory:2788305992
    used_memory_human:2.60G
    used_memory_rss:2865180672
    used_memory_rss_human:2.67G
    used_memory_peak:3014519760
    used_memory_peak_human:2.81G
    total_system_memory:4143886336
    total_system_memory_human:3.86G
    used_memory_lua:37888
    used_memory_lua_human:37.00K
    maxmemory:0
    maxmemory_human:0B
    maxmemory_policy:noeviction
    mem_fragmentation_ratio:1.03
    mem_allocator:jemalloc-4.0.3


 2)hash-max-zipmap-entries <512
   hash-max-zipmap-value <64

     127.0.0.1:6379> dbsize
     (integer) 498694
     127.0.0.1:6379> scan 0
     1) "32768"
     2)  1) "mapKey:89856531"
         2) "mapKey:40601055"
         3) "mapKey:52155425"
         4) "mapKey:83622674"
         5) "mapKey:17020923"
         6) "mapKey:5148821"
         7) "mapKey:11712272"
         8) "mapKey:95316466"
         9) "mapKey:33847714"
        10) "mapKey:77469552"
        11) "mapKey:2098874"
     127.0.0.1:6379> Object ENCODING  mapKey:89856531
     "ziplist"
     127.0.0.1:6379> info Memory
     # Memory
     used_memory:377002432
     used_memory_human:359.54M
     used_memory_rss:391245824
     used_memory_rss_human:373.12M
     used_memory_peak:3014519760
     used_memory_peak_human:2.81G
     total_system_memory:4143886336
     total_system_memory_human:3.86G
     used_memory_lua:37888
     used_memory_lua_human:37.00K
     maxmemory:0
     maxmemory_human:0B
     maxmemory_policy:noeviction
     mem_fragmentation_ratio:1.04
     mem_allocator:jemalloc-4.0.3

 ````


 #List的内存优化实例

1)     list-max-ziplist-entries >512
       list-max-ziplist-value >64
````
   127.0.0.1:6379> dbsize
   (integer) 492202
   127.0.0.1:6379> scan 0
   1) "196608"
   2)  1) "listKey:77533394"
       2) "listKey:13417629"
       3) "listKey:96863048"
       4) "listKey:47932058"
       5) "listKey:86145819"
       6) "listKey:76739577"
       7) "listKey:94135054"
       8) "listKey:74655838"
       9) "listKey:45634837"
      10) "listKey:22441455"
      11) "listKey:34325928"
   127.0.0.1:6379> Object encoding listKey:77533394
   "quicklist"
   127.0.0.1:6379> info Memory
   # Memory
   used_memory:542886456
   used_memory_human:517.74M
   used_memory_rss:561434624
   used_memory_rss_human:535.43M
   used_memory_peak:3014519760
   used_memory_peak_human:2.81G
   total_system_memory:4143886336
   total_system_memory_human:3.86G
   used_memory_lua:37888
   used_memory_lua_human:37.00K
   maxmemory:0
   maxmemory_human:0B
   maxmemory_policy:noeviction
   mem_fragmentation_ratio:1.03
   mem_allocator:jemalloc-4.0.3
````

2) list-max-ziplist-entries <512
   list-max-ziplist-value <64







存储　id -> v1, v2 其中 v1和v2是随机的int64.第一种，只是简单的string存储，第二种，把v1,v2以base64等或者类似机制转为二进制字符串存储.